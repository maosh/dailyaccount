<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ss_.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAnwoAAAIB
        AAAAAQAAAAAbAAAAQ2Fubm90IExpY2Vuc2UgaW4gdGhpcyBob3N0AAAAAG8KAAA8P3htbCB2ZXJzaW9u
        PSIxLjAiPz4NCjxzczpXb3JrYm9vayB4bWxuczp4PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9m
        ZmljZTpleGNlbCINCiB4bWxuczpzcz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6c3By
        ZWFkc2hlZXQiDQogeG1sbnM6Yz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6Y29tcG9u
        ZW50OnNwcmVhZHNoZWV0Ij4NCiA8eDpFeGNlbFdvcmtib29rPg0KICA8eDpQcm90ZWN0U3RydWN0dXJl
        PkZhbHNlPC94OlByb3RlY3RTdHJ1Y3R1cmU+DQogIDx4OkFjdGl2ZVNoZWV0PjA8L3g6QWN0aXZlU2hl
        ZXQ+DQogPC94OkV4Y2VsV29ya2Jvb2s+DQogPHNzOlN0eWxlcz4NCiAgPHNzOlN0eWxlIHNzOklEPSJE
        ZWZhdWx0Ij4NCiAgIDxzczpBbGlnbm1lbnQgc3M6SG9yaXpvbnRhbD0iQXV0b21hdGljIiBzczpSb3Rh
        dGU9IjAuMCIgc3M6VmVydGljYWw9IkJvdHRvbSINCiAgICBzczpSZWFkaW5nT3JkZXI9IkNvbnRleHQi
        Lz4NCiAgIDxzczpCb3JkZXJzPg0KICAgPC9zczpCb3JkZXJzPg0KICAgPHNzOkZvbnQgc3M6Rm9udE5h
        bWU9IuWui+S9kyIgc3M6U2l6ZT0iMTEiIHNzOkNvbG9yPSJBdXRvbWF0aWMiIHNzOkJvbGQ9IjAiDQog
        ICAgc3M6SXRhbGljPSIwIiBzczpVbmRlcmxpbmU9Ik5vbmUiLz4NCiAgIDxzczpJbnRlcmlvciBzczpD
        b2xvcj0iQXV0b21hdGljIiBzczpQYXR0ZXJuPSJOb25lIi8+DQogICA8c3M6TnVtYmVyRm9ybWF0IHNz
        OkZvcm1hdD0iR2VuZXJhbCIvPg0KICAgPHNzOlByb3RlY3Rpb24gc3M6UHJvdGVjdGVkPSIxIi8+DQog
        IDwvc3M6U3R5bGU+DQogPC9zczpTdHlsZXM+DQogPGM6Q29tcG9uZW50T3B0aW9ucz4NCiAgPGM6TGFi
        ZWw+DQogICA8YzpDYXB0aW9uPk1pY3Jvc29mdCBPZmZpY2UgU3ByZWFkc2hlZXQ8L2M6Q2FwdGlvbj4N
        CiAgPC9jOkxhYmVsPg0KICA8YzpNYXhIZWlnaHQ+ODAlPC9jOk1heEhlaWdodD4NCiAgPGM6TWF4V2lk
        dGg+ODAlPC9jOk1heFdpZHRoPg0KICA8YzpOZXh0U2hlZXROdW1iZXI+NDwvYzpOZXh0U2hlZXROdW1i
        ZXI+DQogIDxjOk9yaWdpbmFsU291cmNlIGM6VHlwZT0iNiIvPg0KIDwvYzpDb21wb25lbnRPcHRpb25z
        Pg0KIDx4Oldvcmtib29rT3B0aW9ucz4NCiAgPGM6T1dDVmVyc2lvbj4xMi4wLjAuNDUxOCAgICAgICAg
        IDwvYzpPV0NWZXJzaW9uPg0KICA8eDpIZWlnaHQ+MjEwMDg8L3g6SGVpZ2h0Pg0KICA8eDpXaWR0aD40
        MTAzNzwveDpXaWR0aD4NCiA8L3g6V29ya2Jvb2tPcHRpb25zPg0KIDxzczpXb3Jrc2hlZXQgc3M6TmFt
        ZT0iU2hlZXQxIj4NCiAgPHg6V29ya3NoZWV0T3B0aW9ucz4NCiAgIDx4OlNlbGVjdGVkLz4NCiAgIDx4
        OlZpZXdhYmxlUmFuZ2U+UjE6UjI2MjE0NDwveDpWaWV3YWJsZVJhbmdlPg0KICAgPHg6U2VsZWN0aW9u
        PlIyMkMyMDwveDpTZWxlY3Rpb24+DQogICA8eDpUb3BSb3dWaXNpYmxlPjA8L3g6VG9wUm93VmlzaWJs
        ZT4NCiAgIDx4OkxlZnRDb2x1bW5WaXNpYmxlPjA8L3g6TGVmdENvbHVtblZpc2libGU+DQogICA8eDpQ
        cm90ZWN0Q29udGVudHM+RmFsc2U8L3g6UHJvdGVjdENvbnRlbnRzPg0KICA8L3g6V29ya3NoZWV0T3B0
        aW9ucz4NCiAgPGM6V29ya3NoZWV0T3B0aW9ucz4NCiAgPC9jOldvcmtzaGVldE9wdGlvbnM+DQogIDxz
        czpUYWJsZSBzczpEZWZhdWx0Q29sdW1uV2lkdGg9IjU0LjAiIHNzOkRlZmF1bHRSb3dIZWlnaHQ9IjEy
        Ljc1Ij4NCiAgPC9zczpUYWJsZT4NCiA8L3NzOldvcmtzaGVldD4NCiA8c3M6V29ya3NoZWV0IHNzOk5h
        bWU9IlNoZWV0MiI+DQogIDx4OldvcmtzaGVldE9wdGlvbnM+DQogICA8eDpWaWV3YWJsZVJhbmdlPlIx
        OlIyNjIxNDQ8L3g6Vmlld2FibGVSYW5nZT4NCiAgIDx4OlNlbGVjdGlvbj5SMUMxPC94OlNlbGVjdGlv
        bj4NCiAgIDx4OlRvcFJvd1Zpc2libGU+MDwveDpUb3BSb3dWaXNpYmxlPg0KICAgPHg6TGVmdENvbHVt
        blZpc2libGU+MDwveDpMZWZ0Q29sdW1uVmlzaWJsZT4NCiAgIDx4OlByb3RlY3RDb250ZW50cz5GYWxz
        ZTwveDpQcm90ZWN0Q29udGVudHM+DQogIDwveDpXb3Jrc2hlZXRPcHRpb25zPg0KICA8YzpXb3Jrc2hl
        ZXRPcHRpb25zPg0KICA8L2M6V29ya3NoZWV0T3B0aW9ucz4NCiAgPHNzOlRhYmxlIHNzOkRlZmF1bHRD
        b2x1bW5XaWR0aD0iNTQuMCIgc3M6RGVmYXVsdFJvd0hlaWdodD0iMTIuNzUiPg0KICA8L3NzOlRhYmxl
        Pg0KIDwvc3M6V29ya3NoZWV0Pg0KIDxzczpXb3Jrc2hlZXQgc3M6TmFtZT0iU2hlZXQzIj4NCiAgPHg6
        V29ya3NoZWV0T3B0aW9ucz4NCiAgIDx4OlZpZXdhYmxlUmFuZ2U+UjE6UjI2MjE0NDwveDpWaWV3YWJs
        ZVJhbmdlPg0KICAgPHg6U2VsZWN0aW9uPlIxQzE8L3g6U2VsZWN0aW9uPg0KICAgPHg6VG9wUm93Vmlz
        aWJsZT4wPC94OlRvcFJvd1Zpc2libGU+DQogICA8eDpMZWZ0Q29sdW1uVmlzaWJsZT4wPC94OkxlZnRD
        b2x1bW5WaXNpYmxlPg0KICAgPHg6UHJvdGVjdENvbnRlbnRzPkZhbHNlPC94OlByb3RlY3RDb250ZW50
        cz4NCiAgPC94OldvcmtzaGVldE9wdGlvbnM+DQogIDxjOldvcmtzaGVldE9wdGlvbnM+DQogIDwvYzpX
        b3Jrc2hlZXRPcHRpb25zPg0KICA8c3M6VGFibGUgc3M6RGVmYXVsdENvbHVtbldpZHRoPSI1NC4wIiBz
        czpEZWZhdWx0Um93SGVpZ2h0PSIxMi43NSI+DQogIDwvc3M6VGFibGU+DQogPC9zczpXb3Jrc2hlZXQ+
        DQo8L3NzOldvcmtib29rPg0KCw==
</value>
  </data>
</root>